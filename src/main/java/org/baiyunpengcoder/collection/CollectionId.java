package org.baiyunpengcoder.collection;

/**
 *   QUIC 连接的寿命
 *
 *      连接建立:
 *          QUIC客户端是启动连接的端点。QUIC的连接建立将版本协商和加密和传输握手交织在一起，
 *          以减少连接建立延迟。我们首先在下面描述版本协商。从客户端发送到服务器的每个初始数据包都必须设置版本标志，
 *          并且必须指定正在使用的协议的版本。客户端发送的每个数据包都必须启用版本标志，
 *          直到它从服务器接收到一个关闭版本标志的数据包为止。在服务器从关闭版本标志的客户端接收到第一个数据包后，
 *          它必须忽略打开版本标志的任何（可能延迟的）数据包。
 *          当服务器接收到具有新连接的连接ID的数据包时，它会将客户端的版本与其支持的版本进行比较。
 *          如果服务器可以接受客户端版本，则服务器将在连接的生存期内使用此协议版本。
 *          在这种情况下，服务器发送的所有数据包都将关闭版本标志。
 *          如果服务器不接受客户端版本，则会产生1-RTT延迟。服务器将向客户端发送版本协商数据包。
 *          此数据包将设置版本标志，并将包括服务器支持的版本集。当客户端从服务器接收到版本协商数据包时，
 *          它将选择一个可接受的协议版本，并使用此版本重新发送所有数据包。这些数据包必须继续设置版本标志，
 *          并且必须包括新的协商协议版本。最后，客户端从服务器接收第一个常规数据包（即，不是版本协商数据包），
 *          指示版本协商结束，客户端现在发送所有后续数据包，并关闭版本标志。
 *          为了避免降级攻击，加密握手数据中必须包括客户端在第一个数据包中指定的协议版本以及服务器支持的版本集。
 *          客户端需要验证握手中服务器的版本列表是否与版本协商数据包中的版本列表相匹配。
 *          服务器需要验证来自握手的客户端版本是否表示它实际上不支持的协议版本。
 *          连接建立的其余部分在握手文档【QUIC-CRYTO】中描述。加密握手在专用加密流（Stream ID 1）上执行。
 *          在建立连接期间，握手必须协商各种传输参数。
 *
 *      数据传输:
 *          QUIC实现连接可靠性、拥塞控制和流量控制。QUIC流控制严格遵循HTTP/2的流控制。
 *          QUIC可靠性和拥塞控制在随附的文档中进行了描述。QUIC连接使用单个数据包序列号空间在连接中共享拥塞控制和丢失恢复。
 *          在QUIC连接中传输的所有数据（包括加密握手）都作为流中的数据发送，但ACK确认QUIC数据包。
 *
 *      连接终止：
 *          连接应保持打开状态，直到在预先协商的一段时间内处于空闲状态。当服务器决定终止空闲连接时，
 *          不应通知客户端以避免唤醒移动设备上的无线电。QUIC连接一旦建立，可以通过以下两种方式之一终止：
 *                  1、 显式关闭：端点向对等方发送CONNECTION_CLOSE 帧，启动连接终止。端点可以在连接关闭之前向对等方发送GOAWAY帧，
 *                      以指示连接即将终止。当向对等方发送信号，表示将继续处理任何活动流时，GOAWAY帧，
 *                      但GOAWAY的发送方不会启动任何其他流，也不会接受任何新的传入流。在活动流终止时，
 *                      可以发送 CONNECTION_CLOSE 。如果端点在未终止流处于活动状态时发送CONNECTION_CLOSE 帧
 *                      （没有为一个或多个流发送或接收FIN位或RST_STREAM 流帧），
 *                      则对等方必须假设流不完整且异常终止。
 *                  2、 隐式关闭：QUIC连接的默认空闲超时为30秒，是连接协商中的一个必需参数（“ICSL”）。
 *                      最多10分钟。如果在空闲超时期间没有网络活动，则连接将关闭。默认情况下，
 *                      将发送 CONNECTION_CLOSE 帧。当发送显式关闭（例如必须唤醒无线电的移动网络）的费用很高时，
 *                      可以启用静默关闭选项。
 *
 *      端点还可以在连接期间的任何时候发送 PUBLIC_RESET  包，以突然终止活动连接。
 *      PUBLIC_RESET  是与TCP RST等效的QUIC。
 *
 * @author baiyunpeng
 * @date 2022/6/17 14:25
 **/
public class CollectionId {

}
